/* Apply flexbox to the entire body */
body {
   display: flex;         /* Enables flexbox layout for the body */
   width: 100vw;          /* Set the width to 100% of the viewport width */
   height: 100vh;         /* Set the height to 100% of the viewport height */
   margin: 0px;           /* Remove the default margin from the body */
}

/* Container settings */
div.container {
   display: flex;         /* Apply flexbox layout to the container */
   /* if flex-wrap set to wrap the aligment of align items will set to the value of align content */
   flex-wrap: wrap;       /* Allow items to wrap to the next line if needed */
   align-items: flex-end;   /* Align all items vertically to the center by default */
   justify-content: center; /* Align items horizontally to the center */
   align-content: center; /* Align the lines of items at the start (top) of the container when wrapping occurs */
   flex-direction: row;   /* Arrange items in a horizontal row (default behavior) */
   width: inherit;        /* Inherit the width from the body (100vw) */
   height: inherit;       /* Inherit the height from the body (100vh) */
   background-color: rgb(10, 32, 49); /* Dark background color for contrast */
}

/* Default box settings */
.box {
   display: inherit;      /* Inherit the display property (flexbox) from the parent container */
   width: 200px;          /* Set a fixed width of 200px for each box */
   height: 200px;         /* Set a fixed height of 200px for each box */
}

/* Align the first box (box1) differently */
#box1 {
   align-self: center;    /* Override the default center alignment of the container and align this specific item to the center vertically */
   /* align-self works on individual flex items, so it allows overriding the alignment behavior set by the container's align-items property */
}
